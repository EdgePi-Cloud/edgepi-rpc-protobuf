/* Protobuf file for the PWM SDK module */

syntax = "proto3";

package EdgePiRPC_PWM;
option py_generic_services = true;

service PWMService {
    // determine which of these is needed
    rpc set_config(Config) returns(SuccessMsg);
    rpc init_pwm(PWM) returns(SuccessMsg);
    rpc get_frequency(PWM) returns(float);
    rpc get_duty_cycle(PWM) returns(int);
    rpc get_polarity(PWM) returns(Polarity);
    rpc enable(PWM) returns(SuccessMsg);
    rpc disable(PWM) returns(SuccessMsg);
    rpc get_enabled(PWM) returns(bool);
    rpc close(PWM) returns(SuccessMsg);
}

message SuccessMsg{
    optional string content = 1;
}

message Config {
    repeated ConfArg conf_arg = 1;

    message ConfArg {
        oneof enum {
            float frequency = 2;
            int duty_cycle = 3;
            Polarity polarity = 4;
        }
    }
}

message PWM {
    optional PWMPins pwm_num = 1;
}

enum Polarity {
    NORMAL = 0;
    INVERSED = 1;
}

PWMPins {
    PWM1 = 0;
    PWM2 = 1;
}

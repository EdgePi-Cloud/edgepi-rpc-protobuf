# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dac.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='dac.proto',
  package='EdgePiRPC_DAC',
  syntax='proto3',
  serialized_options=b'\220\001\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tdac.proto\x12\rEdgePiRPC_DAC\"\n\n\x08\x45mptyMsg\".\n\nSuccessMsg\x12\x14\n\x07\x63ontent\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\n\n\x08_content\"^\n\x04Gain\x12\x15\n\x08set_gain\x18\x01 \x01(\x08H\x00\x88\x01\x01\x12\x1d\n\x10\x61uto_code_change\x18\x02 \x01(\x08H\x01\x88\x01\x01\x42\x0b\n\t_set_gainB\x13\n\x11_auto_code_change\"3\n\tGainState\x12\x17\n\ngain_state\x18\x01 \x01(\x08H\x00\x88\x01\x01\x42\r\n\x0b_gain_state\"v\n\x0cWriteVoltage\x12\x34\n\x0b\x64\x61\x63_channel\x18\x01 \x01(\x0e\x32\x1a.EdgePiRPC_DAC.DACChannelsH\x00\x88\x01\x01\x12\x14\n\x07voltage\x18\x02 \x01(\x02H\x01\x88\x01\x01\x42\x0e\n\x0c_dac_channelB\n\n\x08_voltage\"\xaa\x01\n\x08GetState\x12\x34\n\x0b\x64\x61\x63_channel\x18\x01 \x01(\x0e\x32\x1a.EdgePiRPC_DAC.DACChannelsH\x00\x88\x01\x01\x12\x11\n\x04\x63ode\x18\x02 \x01(\x08H\x01\x88\x01\x01\x12\x14\n\x07voltage\x18\x03 \x01(\x08H\x02\x88\x01\x01\x12\x11\n\x04gain\x18\x04 \x01(\x08H\x03\x88\x01\x01\x42\x0e\n\x0c_dac_channelB\x07\n\x05_codeB\n\n\x08_voltageB\x07\n\x05_gain\"}\n\x05State\x12\x15\n\x08\x63ode_val\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x18\n\x0bvoltage_val\x18\x02 \x01(\x02H\x01\x88\x01\x01\x12\x17\n\ngain_state\x18\x03 \x01(\x08H\x02\x88\x01\x01\x42\x0b\n\t_code_valB\x0e\n\x0c_voltage_valB\r\n\x0b_gain_state*e\n\x0b\x44\x41\x43\x43hannels\x12\t\n\x05\x41OUT1\x10\x00\x12\t\n\x05\x41OUT2\x10\x01\x12\t\n\x05\x41OUT3\x10\x02\x12\t\n\x05\x41OUT4\x10\x03\x12\t\n\x05\x41OUT5\x10\x04\x12\t\n\x05\x41OUT6\x10\x05\x12\t\n\x05\x41OUT7\x10\x06\x12\t\n\x05\x41OUT8\x10\x07\x32\x8d\x02\n\nDacService\x12=\n\x0cset_dac_gain\x12\x13.EdgePiRPC_DAC.Gain\x1a\x18.EdgePiRPC_DAC.GainState\x12G\n\rwrite_voltage\x12\x1b.EdgePiRPC_DAC.WriteVoltage\x1a\x19.EdgePiRPC_DAC.SuccessMsg\x12:\n\tget_state\x12\x17.EdgePiRPC_DAC.GetState\x1a\x14.EdgePiRPC_DAC.State\x12;\n\x05reset\x12\x17.EdgePiRPC_DAC.EmptyMsg\x1a\x19.EdgePiRPC_DAC.SuccessMsgB\x03\x90\x01\x01\x62\x06proto3'
)

_DACCHANNELS = _descriptor.EnumDescriptor(
  name='DACChannels',
  full_name='EdgePiRPC_DAC.DACChannels',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AOUT1', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT2', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT3', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT4', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT5', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT6', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT7', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AOUT8', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=657,
  serialized_end=758,
)
_sym_db.RegisterEnumDescriptor(_DACCHANNELS)

DACChannels = enum_type_wrapper.EnumTypeWrapper(_DACCHANNELS)
AOUT1 = 0
AOUT2 = 1
AOUT3 = 2
AOUT4 = 3
AOUT5 = 4
AOUT6 = 5
AOUT7 = 6
AOUT8 = 7



_EMPTYMSG = _descriptor.Descriptor(
  name='EmptyMsg',
  full_name='EdgePiRPC_DAC.EmptyMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=38,
)


_SUCCESSMSG = _descriptor.Descriptor(
  name='SuccessMsg',
  full_name='EdgePiRPC_DAC.SuccessMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='EdgePiRPC_DAC.SuccessMsg.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_content', full_name='EdgePiRPC_DAC.SuccessMsg._content',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=40,
  serialized_end=86,
)


_GAIN = _descriptor.Descriptor(
  name='Gain',
  full_name='EdgePiRPC_DAC.Gain',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='set_gain', full_name='EdgePiRPC_DAC.Gain.set_gain', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='auto_code_change', full_name='EdgePiRPC_DAC.Gain.auto_code_change', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_set_gain', full_name='EdgePiRPC_DAC.Gain._set_gain',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_auto_code_change', full_name='EdgePiRPC_DAC.Gain._auto_code_change',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=88,
  serialized_end=182,
)


_GAINSTATE = _descriptor.Descriptor(
  name='GainState',
  full_name='EdgePiRPC_DAC.GainState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='gain_state', full_name='EdgePiRPC_DAC.GainState.gain_state', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_gain_state', full_name='EdgePiRPC_DAC.GainState._gain_state',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=184,
  serialized_end=235,
)


_WRITEVOLTAGE = _descriptor.Descriptor(
  name='WriteVoltage',
  full_name='EdgePiRPC_DAC.WriteVoltage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='dac_channel', full_name='EdgePiRPC_DAC.WriteVoltage.dac_channel', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='voltage', full_name='EdgePiRPC_DAC.WriteVoltage.voltage', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_dac_channel', full_name='EdgePiRPC_DAC.WriteVoltage._dac_channel',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_voltage', full_name='EdgePiRPC_DAC.WriteVoltage._voltage',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=237,
  serialized_end=355,
)


_GETSTATE = _descriptor.Descriptor(
  name='GetState',
  full_name='EdgePiRPC_DAC.GetState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='dac_channel', full_name='EdgePiRPC_DAC.GetState.dac_channel', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='code', full_name='EdgePiRPC_DAC.GetState.code', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='voltage', full_name='EdgePiRPC_DAC.GetState.voltage', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gain', full_name='EdgePiRPC_DAC.GetState.gain', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_dac_channel', full_name='EdgePiRPC_DAC.GetState._dac_channel',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_code', full_name='EdgePiRPC_DAC.GetState._code',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_voltage', full_name='EdgePiRPC_DAC.GetState._voltage',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_gain', full_name='EdgePiRPC_DAC.GetState._gain',
      index=3, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=358,
  serialized_end=528,
)


_STATE = _descriptor.Descriptor(
  name='State',
  full_name='EdgePiRPC_DAC.State',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code_val', full_name='EdgePiRPC_DAC.State.code_val', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='voltage_val', full_name='EdgePiRPC_DAC.State.voltage_val', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gain_state', full_name='EdgePiRPC_DAC.State.gain_state', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_code_val', full_name='EdgePiRPC_DAC.State._code_val',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_voltage_val', full_name='EdgePiRPC_DAC.State._voltage_val',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_gain_state', full_name='EdgePiRPC_DAC.State._gain_state',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=530,
  serialized_end=655,
)

_SUCCESSMSG.oneofs_by_name['_content'].fields.append(
  _SUCCESSMSG.fields_by_name['content'])
_SUCCESSMSG.fields_by_name['content'].containing_oneof = _SUCCESSMSG.oneofs_by_name['_content']
_GAIN.oneofs_by_name['_set_gain'].fields.append(
  _GAIN.fields_by_name['set_gain'])
_GAIN.fields_by_name['set_gain'].containing_oneof = _GAIN.oneofs_by_name['_set_gain']
_GAIN.oneofs_by_name['_auto_code_change'].fields.append(
  _GAIN.fields_by_name['auto_code_change'])
_GAIN.fields_by_name['auto_code_change'].containing_oneof = _GAIN.oneofs_by_name['_auto_code_change']
_GAINSTATE.oneofs_by_name['_gain_state'].fields.append(
  _GAINSTATE.fields_by_name['gain_state'])
_GAINSTATE.fields_by_name['gain_state'].containing_oneof = _GAINSTATE.oneofs_by_name['_gain_state']
_WRITEVOLTAGE.fields_by_name['dac_channel'].enum_type = _DACCHANNELS
_WRITEVOLTAGE.oneofs_by_name['_dac_channel'].fields.append(
  _WRITEVOLTAGE.fields_by_name['dac_channel'])
_WRITEVOLTAGE.fields_by_name['dac_channel'].containing_oneof = _WRITEVOLTAGE.oneofs_by_name['_dac_channel']
_WRITEVOLTAGE.oneofs_by_name['_voltage'].fields.append(
  _WRITEVOLTAGE.fields_by_name['voltage'])
_WRITEVOLTAGE.fields_by_name['voltage'].containing_oneof = _WRITEVOLTAGE.oneofs_by_name['_voltage']
_GETSTATE.fields_by_name['dac_channel'].enum_type = _DACCHANNELS
_GETSTATE.oneofs_by_name['_dac_channel'].fields.append(
  _GETSTATE.fields_by_name['dac_channel'])
_GETSTATE.fields_by_name['dac_channel'].containing_oneof = _GETSTATE.oneofs_by_name['_dac_channel']
_GETSTATE.oneofs_by_name['_code'].fields.append(
  _GETSTATE.fields_by_name['code'])
_GETSTATE.fields_by_name['code'].containing_oneof = _GETSTATE.oneofs_by_name['_code']
_GETSTATE.oneofs_by_name['_voltage'].fields.append(
  _GETSTATE.fields_by_name['voltage'])
_GETSTATE.fields_by_name['voltage'].containing_oneof = _GETSTATE.oneofs_by_name['_voltage']
_GETSTATE.oneofs_by_name['_gain'].fields.append(
  _GETSTATE.fields_by_name['gain'])
_GETSTATE.fields_by_name['gain'].containing_oneof = _GETSTATE.oneofs_by_name['_gain']
_STATE.oneofs_by_name['_code_val'].fields.append(
  _STATE.fields_by_name['code_val'])
_STATE.fields_by_name['code_val'].containing_oneof = _STATE.oneofs_by_name['_code_val']
_STATE.oneofs_by_name['_voltage_val'].fields.append(
  _STATE.fields_by_name['voltage_val'])
_STATE.fields_by_name['voltage_val'].containing_oneof = _STATE.oneofs_by_name['_voltage_val']
_STATE.oneofs_by_name['_gain_state'].fields.append(
  _STATE.fields_by_name['gain_state'])
_STATE.fields_by_name['gain_state'].containing_oneof = _STATE.oneofs_by_name['_gain_state']
DESCRIPTOR.message_types_by_name['EmptyMsg'] = _EMPTYMSG
DESCRIPTOR.message_types_by_name['SuccessMsg'] = _SUCCESSMSG
DESCRIPTOR.message_types_by_name['Gain'] = _GAIN
DESCRIPTOR.message_types_by_name['GainState'] = _GAINSTATE
DESCRIPTOR.message_types_by_name['WriteVoltage'] = _WRITEVOLTAGE
DESCRIPTOR.message_types_by_name['GetState'] = _GETSTATE
DESCRIPTOR.message_types_by_name['State'] = _STATE
DESCRIPTOR.enum_types_by_name['DACChannels'] = _DACCHANNELS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EmptyMsg = _reflection.GeneratedProtocolMessageType('EmptyMsg', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYMSG,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.EmptyMsg)
  })
_sym_db.RegisterMessage(EmptyMsg)

SuccessMsg = _reflection.GeneratedProtocolMessageType('SuccessMsg', (_message.Message,), {
  'DESCRIPTOR' : _SUCCESSMSG,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.SuccessMsg)
  })
_sym_db.RegisterMessage(SuccessMsg)

Gain = _reflection.GeneratedProtocolMessageType('Gain', (_message.Message,), {
  'DESCRIPTOR' : _GAIN,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.Gain)
  })
_sym_db.RegisterMessage(Gain)

GainState = _reflection.GeneratedProtocolMessageType('GainState', (_message.Message,), {
  'DESCRIPTOR' : _GAINSTATE,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.GainState)
  })
_sym_db.RegisterMessage(GainState)

WriteVoltage = _reflection.GeneratedProtocolMessageType('WriteVoltage', (_message.Message,), {
  'DESCRIPTOR' : _WRITEVOLTAGE,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.WriteVoltage)
  })
_sym_db.RegisterMessage(WriteVoltage)

GetState = _reflection.GeneratedProtocolMessageType('GetState', (_message.Message,), {
  'DESCRIPTOR' : _GETSTATE,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.GetState)
  })
_sym_db.RegisterMessage(GetState)

State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), {
  'DESCRIPTOR' : _STATE,
  '__module__' : 'dac_pb2'
  # @@protoc_insertion_point(class_scope:EdgePiRPC_DAC.State)
  })
_sym_db.RegisterMessage(State)


DESCRIPTOR._options = None

_DACSERVICE = _descriptor.ServiceDescriptor(
  name='DacService',
  full_name='EdgePiRPC_DAC.DacService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=761,
  serialized_end=1030,
  methods=[
  _descriptor.MethodDescriptor(
    name='set_dac_gain',
    full_name='EdgePiRPC_DAC.DacService.set_dac_gain',
    index=0,
    containing_service=None,
    input_type=_GAIN,
    output_type=_GAINSTATE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='write_voltage',
    full_name='EdgePiRPC_DAC.DacService.write_voltage',
    index=1,
    containing_service=None,
    input_type=_WRITEVOLTAGE,
    output_type=_SUCCESSMSG,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='get_state',
    full_name='EdgePiRPC_DAC.DacService.get_state',
    index=2,
    containing_service=None,
    input_type=_GETSTATE,
    output_type=_STATE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='reset',
    full_name='EdgePiRPC_DAC.DacService.reset',
    index=3,
    containing_service=None,
    input_type=_EMPTYMSG,
    output_type=_SUCCESSMSG,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DACSERVICE)

DESCRIPTOR.services_by_name['DacService'] = _DACSERVICE

DacService = service_reflection.GeneratedServiceType('DacService', (_service.Service,), dict(
  DESCRIPTOR = _DACSERVICE,
  __module__ = 'dac_pb2'
  ))

DacService_Stub = service_reflection.GeneratedServiceStubType('DacService_Stub', (DacService,), dict(
  DESCRIPTOR = _DACSERVICE,
  __module__ = 'dac_pb2'
  ))


# @@protoc_insertion_point(module_scope)
